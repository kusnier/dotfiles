snippet date
`!v strftime("%Y-%m-%d")`
endsnippet

snippet s@k
`!v printf("%s@%s.%s", "sebastian", "kusnier", "net")`
endsnippet

snippet sk
Sebastian Kusnier
endsnippet

snippet dod "Definition of Done (jira)"
(x) Code Review
(x) Deployed (@stage
(x) GUI Review (@stage)
(x) Unittest (non-legacy code)
(x) Daily wiki entry
endsnippet

snippet commit "Commit Message Template"
${1:Capitalized, short (50 chars or less) summary}

${2:More detailed explanatory text, if necessary.  Wrap it to about 72
characters or so.  In some contexts, the first line is treated as the
subject of an email and the rest of the text as the body.  The blank
line separating the summary from the body is critical (unless you omit
the body entirely); tools like rebase can get confused if you run the
two together.

Write your commit message in the imperative: "Fix bug" and not "Fixed bug"
or "Fixes bug."  This convention matches up with commit messages generated
by commands like git merge and git revert.

Further paragraphs come after blank lines.

- Bullet points are okay, too

- Typically a hyphen or asterisk is used for the bullet, preceded by a
  single space, with blank lines in between, but conventions vary here

- Use a hanging indent}${3:

- Issue#{4:xxx}}
endsnippet
